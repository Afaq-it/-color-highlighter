/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2019 Elior Boukhobza
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 *
 */
buildscript {
    repositories {
        jcenter()
        maven { url 'http://dl.bintray.com/content/aalmiray/kordamp' }
        gradlePluginPortal()
        maven { url "https://maven-central.storage-download.googleapis.com/repos/central/data/" }
        maven { url "https://maven.aliyun.com/nexus/content/groups/public/" }
    }
    dependencies {
        classpath 'org.kordamp:markdown-gradle-plugin:1.0.0'
    }
}


plugins {
    id 'org.jetbrains.intellij' version '0.4.18'
}

repositories {
    mavenCentral()
    maven { url 'http://dl.bintray.com/jetbrains/intellij-plugin-service' }
}


dependencies {
    compile('com.thoughtworks.xstream:xstream:1.4.11.1') {
//        exclude group: 'xmlpull', module: 'xmlpull'
//        exclude group: 'xpp3', module: 'xpp3_min'
    }

}
apply plugin: 'org.kordamp.markdown.convert'

apply plugin: 'java'
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

sourceSets {
    main {
        java.srcDirs 'src/main/java'
        resources.srcDir 'src/main/resources'
    }
}

markdownToHtml {
    sourceDir new File("$projectDir/docs")
    outputDir new File("$projectDir/docs")
}

version = System.getenv("pluginVersion") ?: pluginVersion

def pluginsDependencies = [
        'java',
        'java-i18n',
        'JavaScriptLanguage',
        'DatabaseTools',
        'CSS',
        'platform-images',
        'Groovy',
        'properties',
        'yaml',
        'org.jetbrains.plugins.go:201.6668.60.126',
        "org.jetbrains.kotlin:$kotlinVersion-release-IJ2020.1-1",
        'org.intellij.scala:2020.1.27',
        'org.jetbrains.plugins.ruby:201.6668.113',
        'com.jetbrains.php:201.6668.113'
]

intellij {
    pluginName 'Color Highlighter'
    type 'IU'
    version 'LATEST-EAP-SNAPSHOT'
    downloadSources true
//    sameSinceUntilBuild false
    updateSinceUntilBuild true
    alternativeIdePath idePath
//    systemProperty "idea.platform.prefix","DataGrip"

    patchPluginXml {
        version "$version"
        sinceBuild System.getenv("pluginSinceBuild") ?: sinceBuildP
        changeNotes file("$projectDir/docs/CHANGELOG.html").text
//        untilBuild System.getenv("pluginUntilBuild") ?: untilBuildP
    }

    publishPlugin {
        token System.getenv("publishToken") ?: publishToken
        username System.getenv("publishUsername") ?: publishUsername
        password System.getenv("publishPassword") ?: publishPassword
    }

    setPlugins(*pluginsDependencies)

//    runIde {
//        jbrVersion '11_0_3b312'
//    }
}
